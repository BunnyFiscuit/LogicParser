module LogicExpr.Skel where

-- Haskell module generated by the BNF converter

import LogicExpr.Abs
import LogicExpr.ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transIdent :: Ident -> Result
transIdent x = case x of
  Ident str  -> failure x


transExpr :: Expr -> Result
transExpr x = case x of
  EImp expr1 expr2  -> failure x
  EAnd expr1 expr2  -> failure x
  EOr expr1 expr2  -> failure x
  ENot expr  -> failure x
  ELitTrue  -> failure x
  ELitFalse  -> failure x
  EVar id  -> failure x



